# Generated by Django 4.2.1 on 2023-05-14 21:33

import blog.accounts.models
from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_lifecycle.mixins
import tinymce.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('avatar', models.ImageField(blank=True, max_length=5000, null=True, upload_to=blog.accounts.models.avatar_upload_to, verbose_name='Imagem')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='150 caracteres ou menos. Letras, números e @/./+/-/_ apenas.', max_length=150, unique=True, verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('accepted_the_terms_of_use', models.BooleanField(blank=True, default=False, verbose_name='Aceitou os termos de uso da plataforma')),
                ('about_me', models.TextField(blank=True, null=True, verbose_name='Sobre mim')),
                ('profile_views', models.IntegerField(blank=True, default=0, verbose_name='Visitas do perfil')),
            ],
            options={
                'verbose_name': 'Autor',
                'verbose_name_plural': 'Autores',
                'ordering': ['-date_joined'],
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ActiveSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Registrado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('last_activity', models.DateTimeField()),
            ],
            options={
                'verbose_name': 'Sessão ativa',
                'verbose_name_plural': 'Sessões ativas',
                'db_table': '',
                'managed': True,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='SocialAccount',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Registrado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('social', models.CharField(choices=[('facebook', 'Facebook'), ('twitter', 'Twitter'), ('instagram', 'Instagram'), ('twitch', 'Twitch'), ('youtube', 'Youtube'), ('patreon', 'Patreon'), ('discord', 'Discord')], max_length=50, verbose_name='Rede social')),
                ('url', models.URLField(max_length=255, verbose_name='Link do perfil')),
                ('icon', models.CharField(blank=True, max_length=50, verbose_name='Ícone da rede social')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='BlogConfiguration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Registrado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('header_image', models.ImageField(blank=True, max_length=5000, null=True, upload_to=blog.accounts.models.header_upload_to, verbose_name='Capa do blog')),
                ('name', models.CharField(max_length=200, verbose_name='Nome do blog')),
                ('description', tinymce.models.HTMLField()),
                ('autor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='configuration', to=settings.AUTH_USER_MODEL, verbose_name='Autor do blog')),
            ],
            options={
                'verbose_name': 'Configuração',
                'verbose_name_plural': 'Configurações',
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
    ]
